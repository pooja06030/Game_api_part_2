# Generated by Django 5.0 on 2023-12-26 08:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Game_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=100)),
                ('category_description', models.TextField(max_length=254)),
                ('category_image', models.ImageField(max_length=200, upload_to='category_images')),
                ('category_icon_upload', models.FileField(max_length=500, upload_to='category_icons')),
                ('category_icon_url', models.URLField()),
                ('active', models.BooleanField(default=True)),
                ('category_subtitle', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Make_and_Models',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='make_and_Models_mapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Game', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Game_app.gamemaker')),
                ('Make_and_modle', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='storefront.make_and_models')),
            ],
        ),
        migrations.CreateModel(
            name='store_frant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Game', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='store_game', to='Game_app.gamemaker')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storefront.category')),
                ('device', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='store_divice', to='Game_app.device_frant')),
            ],
        ),
        migrations.CreateModel(
            name='Storemap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Game_type', models.CharField(choices=[('HTML', 'HTML '), ('Cloud', 'Cloud'), ('Native', 'Native')], default='HTML', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('Play_url', models.URLField()),
                ('Image_icon', models.FileField(max_length=500, upload_to='Image_icons')),
                ('Banner_Image', models.ImageField(max_length=200, upload_to='Banner_images')),
                ('Game_version', models.IntegerField()),
                ('Game_size', models.IntegerField()),
                ('Video_url', models.URLField()),
                ('create_at', models.DateField()),
                ('update_at', models.DateField(auto_now=True)),
                ('Game', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Game_app.gamemaker')),
                ('device', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='Game_app.device_frant')),
            ],
        ),
        migrations.CreateModel(
            name='storefrontcategoryMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('create_at', models.DateField()),
                ('update_at', models.DateField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storefront.category')),
                ('storemap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sfcategory', to='storefront.storemap')),
            ],
        ),
    ]
